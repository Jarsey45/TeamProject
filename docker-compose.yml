services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${POSTGRES_HOST}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks: 
      - pg_network
    healthcheck:
      test: ["CMD", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10

  php:
    build:
      context: ./.docker/php
      args:
        TIMEZONE: ${TIMEZONE}
    volumes:
      - ./app:/var/www/symfony
      - /var/www/symfony/vendor
      - /var/www/symfony/var
    networks:
      - pg_network
    depends_on:
      - db

  nginx:
    build:
      context: ./.docker/nginx
    volumes:
      - ./app:/var/www/symfony
      - /var/www/symfony/vendor
      - /var/www/symfony/var
    ports:
      - 80:80
    networks:
      - pg_network
    env_file:
      - ./.docker/.env.nginx.local

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - pg_network
    depends_on:
      - db

volumes:
  symfony_app_var:
  symfony_app_vendor:
  pgdata:

networks:
  pg_network:
    # driver: bridge